<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="3" failures="58" skipped="0" tests="68" time="5.653" timestamp="2025-08-03T21:25:19.964886+00:00" hostname="b33e47d7be70"><testcase classname="tests.test_admin.TestAdmin" name="test_admin_dashboard_unauthorized" time="0.008"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_admin.TestAdmin" name="test_admin_dashboard_authorized" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_admin.TestAdmin" name="test_admin_categories" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_admin.TestAdmin" name="test_admin_categories_table" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_admin.TestAdmin" name="test_admin_category_edit_form" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_admin.TestAdmin" name="test_admin_category_create" time="0.005"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_admin.TestAdmin" name="test_admin_user_view" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_admin.TestAdmin" name="test_admin_update_user_password" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_admin.TestAdmin" name="test_admin_note_ai_check" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_admin.TestAdmin" name="test_admin_note_ai_check_user" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_functions.TestAIFunctions" name="test_get_tags" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_functions.TestAIFunctions" name="test_get_summary" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_functions.TestAIFunctions" name="test_get_mood" time="0.001"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_functions.TestHashFunctions" name="test_hash_password" time="0.066" /><testcase classname="tests.test_functions.TestHashFunctions" name="test_verify_password" time="0.128" /><testcase classname="tests.test_functions.TestHashFunctions" name="test_check_password_complexity" time="0.001" /><testcase classname="tests.test_functions.TestDateFunctions" name="test_timezone_update" time="0.001"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_functions.TestDateFunctions" name="test_update_timezone_for_dates" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_functions.TestLoginRequired" name="test_check_user_identifier_valid" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_functions.TestLoginRequired" name="test_check_user_identifier_invalid" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_functions.TestLoginRequired" name="test_check_session_expiry_valid" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_functions.TestLoginRequired" name="test_check_session_expiry_expired" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_notes.TestNotes" name="test_notes_dashboard_unauthorized" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_notes.TestNotes" name="test_notes_dashboard_authorized" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_notes.TestNotes" name="test_new_note_form" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_notes.TestNotes" name="test_create_note" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_notes.TestNotes" name="test_view_note" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_notes.TestNotes" name="test_edit_note_form" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_notes.TestNotes" name="test_update_note" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_notes.TestNotes" name="test_delete_note" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_notes.TestNotes" name="test_pagination" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_notes.TestNotes" name="test_ai_fix_note" time="0.005"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_pages.TestPages" name="test_root_redirect" time="0.501"><failure message="assert 200 == 302&#10; +  where 200 = &lt;Response [200 OK]&gt;.status_code">tests/test_pages.py:13: in test_root_redirect
    assert response.status_code == 302
E   assert 200 == 302
E    +  where 200 = &lt;Response [200 OK]&gt;.status_code</failure></testcase><testcase classname="tests.test_pages.TestPages" name="test_app_info" time="0.026" /><testcase classname="tests.test_pages.TestPages" name="test_index_page" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_pages.TestPages" name="test_about_page" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_pages.TestPages" name="test_public_debt" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_pages.TestPages" name="test_data_page" time="0.044" /><testcase classname="tests.test_pages" name="test_about" time="0.002"><failure message="NameError: name 'client' is not defined">tests/test_pages.py:74: in test_about
    response = client.get(url)
               ^^^^^^
E   NameError: name 'client' is not defined</failure></testcase><testcase classname="tests.test_pages" name="test_data" time="0.001"><failure message="NameError: name 'client' is not defined">tests/test_pages.py:82: in test_data
    response = client.get(url)
               ^^^^^^
E   NameError: name 'client' is not defined</failure></testcase><testcase classname="tests.test_post" name="test_get_posts" time="0.001"><error message="failed on setup with &quot;file /workspaces/dsg/tests/test_post.py, line 16&#10;  @pytest.mark.asyncio&#10;  async def test_get_posts(test_client, mock_login):&#10;      response = test_client.get(&quot;/posts&quot;)&#10;      assert response.status_code == 200&#10;      assert (&#10;          &quot;&lt;!DOCTYPE html&gt;&quot; in response.text&#10;      )  # Check for a specific text in the HTML response&#10;E       fixture 'test_client' not found&#10;&gt;       available fixtures: LineMatcher, _class_event_loop, _config_for_test, _function_event_loop, _module_event_loop, _package_event_loop, _pytest, _session_event_loop, _sys_snapshot, admin_client, anyio_backend, anyio_backend_name, anyio_backend_options, authenticated_client, bypass_admin_auth, bypass_auth, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, doctest_namespace, event_loop, event_loop_policy, extra, extras, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, linecomp, metadata, mock_admin_user, mock_ai, mock_background_tasks, mock_category, mock_db_ops, mock_note, mock_post, mock_user, mock_weblink, monkeypatch, no_cover, pytestconfig, pytester, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_db, testdir, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/workspaces/dsg/tests/test_post.py:16&quot;">file /workspaces/dsg/tests/test_post.py, line 16
  @pytest.mark.asyncio
  async def test_get_posts(test_client, mock_login):
      response = test_client.get("/posts")
      assert response.status_code == 200
      assert (
          "&lt;!DOCTYPE html&gt;" in response.text
      )  # Check for a specific text in the HTML response
E       fixture 'test_client' not found
&gt;       available fixtures: LineMatcher, _class_event_loop, _config_for_test, _function_event_loop, _module_event_loop, _package_event_loop, _pytest, _session_event_loop, _sys_snapshot, admin_client, anyio_backend, anyio_backend_name, anyio_backend_options, authenticated_client, bypass_admin_auth, bypass_auth, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, doctest_namespace, event_loop, event_loop_policy, extra, extras, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, linecomp, metadata, mock_admin_user, mock_ai, mock_background_tasks, mock_category, mock_db_ops, mock_note, mock_post, mock_user, mock_weblink, monkeypatch, no_cover, pytestconfig, pytester, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_db, testdir, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/workspaces/dsg/tests/test_post.py:16</error></testcase><testcase classname="tests.test_post" name="test_edit_post" time="0.001"><error message="failed on setup with &quot;file /workspaces/dsg/tests/test_post.py, line 25&#10;  @pytest.mark.asyncio&#10;  async def test_edit_post(test_client, mock_login):&#10;      # Fetch posts from the database&#10;      posts = await db_ops.read_query(query=Select(Posts))&#10;      logger.critical(posts)&#10;      logger.critical(type(posts))&#10;      try:&#10;          posts = [post.to_dict() for post in posts]&#10;      except Exception as ex:&#10;          logger.critical(ex)&#10;          pytest.fail(f&quot;Error fetching posts from the database: {ex}&quot;)&#10;&#10;      post_id = &quot;&quot;&#10;      # Get the first post's UUID&#10;      if posts:&#10;          post = posts[0]&#10;          post_id = post[&quot;pkid&quot;]&#10;      else:&#10;          pytest.fail(&quot;No posts found in the database&quot;)&#10;&#10;      post_data = {&#10;          &quot;title&quot;: &quot;Updated Title&quot;,&#10;          &quot;summary&quot;: &quot;Updated Summary&quot;,&#10;          &quot;content&quot;: &quot;Updated Content&quot;,&#10;          &quot;category&quot;: &quot;Updated Category&quot;,&#10;          &quot;tags&quot;: &quot;updated,tags&quot;,&#10;      }&#10;      logger.critical(post_id)&#10;      response = test_client.post(f&quot;/posts/edit/{post_id}&quot;, data=post_data)&#10;      # 9a87994b-8647-407b-9d7b-572a4a3b6013&#10;      logger.critical(response.text)  # Log the response content&#10;      assert response.status_code == 200&#10;      assert (&#10;          &quot;&lt;!DOCTYPE html&gt;&quot; in response.text&#10;      )  # Check for a specific text in the HTML response&#10;E       fixture 'test_client' not found&#10;&gt;       available fixtures: LineMatcher, _class_event_loop, _config_for_test, _function_event_loop, _module_event_loop, _package_event_loop, _pytest, _session_event_loop, _sys_snapshot, admin_client, anyio_backend, anyio_backend_name, anyio_backend_options, authenticated_client, bypass_admin_auth, bypass_auth, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, doctest_namespace, event_loop, event_loop_policy, extra, extras, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, linecomp, metadata, mock_admin_user, mock_ai, mock_background_tasks, mock_category, mock_db_ops, mock_note, mock_post, mock_user, mock_weblink, monkeypatch, no_cover, pytestconfig, pytester, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_db, testdir, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/workspaces/dsg/tests/test_post.py:25&quot;">file /workspaces/dsg/tests/test_post.py, line 25
  @pytest.mark.asyncio
  async def test_edit_post(test_client, mock_login):
      # Fetch posts from the database
      posts = await db_ops.read_query(query=Select(Posts))
      logger.critical(posts)
      logger.critical(type(posts))
      try:
          posts = [post.to_dict() for post in posts]
      except Exception as ex:
          logger.critical(ex)
          pytest.fail(f"Error fetching posts from the database: {ex}")

      post_id = ""
      # Get the first post's UUID
      if posts:
          post = posts[0]
          post_id = post["pkid"]
      else:
          pytest.fail("No posts found in the database")

      post_data = {
          "title": "Updated Title",
          "summary": "Updated Summary",
          "content": "Updated Content",
          "category": "Updated Category",
          "tags": "updated,tags",
      }
      logger.critical(post_id)
      response = test_client.post(f"/posts/edit/{post_id}", data=post_data)
      # 9a87994b-8647-407b-9d7b-572a4a3b6013
      logger.critical(response.text)  # Log the response content
      assert response.status_code == 200
      assert (
          "&lt;!DOCTYPE html&gt;" in response.text
      )  # Check for a specific text in the HTML response
E       fixture 'test_client' not found
&gt;       available fixtures: LineMatcher, _class_event_loop, _config_for_test, _function_event_loop, _module_event_loop, _package_event_loop, _pytest, _session_event_loop, _sys_snapshot, admin_client, anyio_backend, anyio_backend_name, anyio_backend_options, authenticated_client, bypass_admin_auth, bypass_auth, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, doctest_namespace, event_loop, event_loop_policy, extra, extras, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, linecomp, metadata, mock_admin_user, mock_ai, mock_background_tasks, mock_category, mock_db_ops, mock_note, mock_post, mock_user, mock_weblink, monkeypatch, no_cover, pytestconfig, pytester, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_db, testdir, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/workspaces/dsg/tests/test_post.py:25</error></testcase><testcase classname="tests.test_post.TestPosts" name="test_posts_index" time="0.039" /><testcase classname="tests.test_post.TestPosts" name="test_get_categories" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_post.TestPosts" name="test_new_post_form" time="0.005"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_post.TestPosts" name="test_create_post" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_post.TestPosts" name="test_view_post" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_post.TestPosts" name="test_edit_post_form" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_post.TestPosts" name="test_update_post" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_post.TestPosts" name="test_delete_post" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_post.TestPosts" name="test_posts_pagination" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_posts.TestPosts" name="test_posts_index" time="0.015" /><testcase classname="tests.test_posts.TestPosts" name="test_get_categories" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_posts.TestPosts" name="test_new_post_form" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_posts.TestPosts" name="test_create_post" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_posts.TestPosts" name="test_view_post" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_posts.TestPosts" name="test_edit_post_form" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_posts.TestPosts" name="test_update_post" time="0.005"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_posts.TestPosts" name="test_delete_post" time="0.006"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_posts.TestPosts" name="test_posts_pagination" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_users" name="test_login" time="0.001"><error message="failed on setup with &quot;file /workspaces/dsg/tests/test_users.py, line 12&#10;  def test_login(test_client, mock_login):&#10;E       fixture 'test_client' not found&#10;&gt;       available fixtures: LineMatcher, _class_event_loop, _config_for_test, _function_event_loop, _module_event_loop, _package_event_loop, _pytest, _session_event_loop, _sys_snapshot, admin_client, anyio_backend, anyio_backend_name, anyio_backend_options, authenticated_client, bypass_admin_auth, bypass_auth, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, doctest_namespace, event_loop, event_loop_policy, extra, extras, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, linecomp, metadata, mock_admin_user, mock_ai, mock_background_tasks, mock_category, mock_db_ops, mock_note, mock_post, mock_user, mock_weblink, monkeypatch, no_cover, pytestconfig, pytester, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_db, testdir, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/workspaces/dsg/tests/test_users.py:12&quot;">file /workspaces/dsg/tests/test_users.py, line 12
  def test_login(test_client, mock_login):
E       fixture 'test_client' not found
&gt;       available fixtures: LineMatcher, _class_event_loop, _config_for_test, _function_event_loop, _module_event_loop, _package_event_loop, _pytest, _session_event_loop, _sys_snapshot, admin_client, anyio_backend, anyio_backend_name, anyio_backend_options, authenticated_client, bypass_admin_auth, bypass_auth, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, doctest_namespace, event_loop, event_loop_policy, extra, extras, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, linecomp, metadata, mock_admin_user, mock_ai, mock_background_tasks, mock_category, mock_db_ops, mock_note, mock_post, mock_user, mock_weblink, monkeypatch, no_cover, pytestconfig, pytester, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_db, testdir, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/workspaces/dsg/tests/test_users.py:12</error></testcase><testcase classname="tests.test_users.TestUsers" name="test_edit_user_form" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_users.TestUsers" name="test_edit_user_post_valid" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_users.TestUsers" name="test_edit_user_post_invalid_email" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_users.TestUsers" name="test_logout" time="0.048"><failure message="assert 200 == 303&#10; +  where 200 = &lt;Response [200 OK]&gt;.status_code">tests/test_users.py:68: in test_logout
    assert response.status_code == 303
E   assert 200 == 303
E    +  where 200 = &lt;Response [200 OK]&gt;.status_code</failure></testcase><testcase classname="tests.test_users.TestUsers" name="test_user_info" time="0.004"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_users.TestUsers" name="test_github_login" time="0.002"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase><testcase classname="tests.test_users.TestUsers" name="test_github_callback_new_user" time="0.003"><failure message="Failed: async def functions are not natively supported.&#10;You need to install a suitable plugin for your async framework, for example:&#10;  - anyio&#10;  - pytest-asyncio&#10;  - pytest-tornasync&#10;  - pytest-trio&#10;  - pytest-twisted">async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted</failure></testcase></testsuite></testsuites>