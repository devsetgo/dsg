"""database creation

Revision ID: a863a4f8be39
Revises: 
Create Date: 2024-04-15 18:19:10.747523

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a863a4f8be39'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    with op.batch_alter_table('job_applications') as batch_op:
        batch_op.drop_constraint('job_applications_user_id_fkey', type_='foreignkey')
    with op.batch_alter_table('notes') as batch_op:
        batch_op.drop_constraint('notes_user_id_fkey', type_='foreignkey')
    with op.batch_alter_table('categories') as batch_op:
        batch_op.drop_constraint('categories_user_id_fkey', type_='foreignkey')
    with op.batch_alter_table('interesting_things') as batch_op:
        batch_op.drop_constraint('interesting_things_user_id_fkey', type_='foreignkey')
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_requirements_date_created', table_name='requirements')
    op.drop_index('ix_requirements_date_updated', table_name='requirements')
    op.drop_index('ix_requirements_host_ip', table_name='requirements')
    op.drop_index('ix_requirements_pkid', table_name='requirements')
    op.drop_index('ix_requirements_request_group_id', table_name='requirements')
    op.drop_table('requirements')
    op.drop_index('ix_interesting_things_category', table_name='interesting_things')
    op.drop_index('ix_interesting_things_date_created', table_name='interesting_things')
    op.drop_index('ix_interesting_things_date_updated', table_name='interesting_things')
    op.drop_index('ix_interesting_things_description', table_name='interesting_things')
    op.drop_index('ix_interesting_things_name', table_name='interesting_things')
    op.drop_index('ix_interesting_things_pkid', table_name='interesting_things')
    op.drop_index('ix_interesting_things_url', table_name='interesting_things')
    op.drop_table('interesting_things')
    op.drop_index('ix_libraries_current_version', table_name='libraries')
    op.drop_index('ix_libraries_date_created', table_name='libraries')
    op.drop_index('ix_libraries_date_updated', table_name='libraries')
    op.drop_index('ix_libraries_new_version', table_name='libraries')
    op.drop_index('ix_libraries_new_version_vulnerability', table_name='libraries')
    op.drop_index('ix_libraries_pkid', table_name='libraries')
    op.drop_index('ix_libraries_request_group_id', table_name='libraries')
    op.drop_table('libraries')
    op.drop_index('ix_notes_date_created', table_name='notes')
    op.drop_index('ix_notes_date_updated', table_name='notes')
    op.drop_index('ix_notes_mood', table_name='notes')
    op.drop_index('ix_notes_mood_analysis', table_name='notes')
    op.drop_index('ix_notes_note', table_name='notes')
    op.drop_index('ix_notes_pkid', table_name='notes')
    op.drop_index('ix_notes_summary', table_name='notes')
    op.drop_table('notes')
    op.drop_index('ix_library_names_name', table_name='library_names')
    op.drop_index('ix_library_names_pkid', table_name='library_names')
    op.drop_table('library_names')
    op.drop_index('ix_categories_date_created', table_name='categories')
    op.drop_index('ix_categories_date_updated', table_name='categories')
    op.drop_index('ix_categories_description', table_name='categories')
    op.drop_index('ix_categories_name', table_name='categories')
    op.drop_index('ix_categories_pkid', table_name='categories')
    op.drop_table('categories')
    op.drop_index('ix_job_application_tasks_date_created', table_name='job_application_tasks')
    op.drop_index('ix_job_application_tasks_date_updated', table_name='job_application_tasks')
    op.drop_index('ix_job_application_tasks_due_date', table_name='job_application_tasks')
    op.drop_index('ix_job_application_tasks_pkid', table_name='job_application_tasks')
    op.drop_index('ix_job_application_tasks_status', table_name='job_application_tasks')
    op.drop_index('ix_job_application_tasks_task_description', table_name='job_application_tasks')
    op.drop_table('job_application_tasks')
    op.drop_index('ix_users_date_created', table_name='users')
    op.drop_index('ix_users_date_last_login', table_name='users')
    op.drop_index('ix_users_date_updated', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_first_name', table_name='users')
    op.drop_index('ix_users_last_name', table_name='users')
    op.drop_index('ix_users_my_timezone', table_name='users')
    op.drop_index('ix_users_password', table_name='users')
    op.drop_index('ix_users_pkid', table_name='users')
    op.drop_index('ix_users_user_name', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_job_applications_application_date', table_name='job_applications')
    op.drop_index('ix_job_applications_application_status', table_name='job_applications')
    op.drop_index('ix_job_applications_company_name', table_name='job_applications')
    op.drop_index('ix_job_applications_date_created', table_name='job_applications')
    op.drop_index('ix_job_applications_date_updated', table_name='job_applications')
    op.drop_index('ix_job_applications_job_title', table_name='job_applications')
    op.drop_index('ix_job_applications_pkid', table_name='job_applications')
    op.drop_index('ix_job_applications_url', table_name='job_applications')
    op.drop_table('job_applications')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_applications',
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job_title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('application_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('application_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pkid', sa.VARCHAR(length=36), autoincrement=False, nullable=False, comment='Unique identifier for each record, a string representation of a UUID'),
    sa.Column('date_created', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was inserted, defaults to current UTC time'),
    sa.Column('date_updated', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was last updated, defaults to current UTC time on update'),
    sa.ForeignKeyConstraint(['user_id'], ['users.pkid'], name='job_applications_user_id_fkey'),
    sa.PrimaryKeyConstraint('pkid', name='job_applications_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_job_applications_url', 'job_applications', ['url'], unique=False)
    op.create_index('ix_job_applications_pkid', 'job_applications', ['pkid'], unique=False)
    op.create_index('ix_job_applications_job_title', 'job_applications', ['job_title'], unique=False)
    op.create_index('ix_job_applications_date_updated', 'job_applications', ['date_updated'], unique=False)
    op.create_index('ix_job_applications_date_created', 'job_applications', ['date_created'], unique=False)
    op.create_index('ix_job_applications_company_name', 'job_applications', ['company_name'], unique=False)
    op.create_index('ix_job_applications_application_status', 'job_applications', ['application_status'], unique=False)
    op.create_index('ix_job_applications_application_date', 'job_applications', ['application_date'], unique=False)
    op.create_table('users',
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('my_timezone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('site_access', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('date_last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('failed_login_attempts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_locked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('pkid', sa.VARCHAR(length=36), autoincrement=False, nullable=False, comment='Unique identifier for each record, a string representation of a UUID'),
    sa.Column('date_created', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was inserted, defaults to current UTC time'),
    sa.Column('date_updated', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was last updated, defaults to current UTC time on update'),
    sa.PrimaryKeyConstraint('pkid', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_user_name', 'users', ['user_name'], unique=True)
    op.create_index('ix_users_pkid', 'users', ['pkid'], unique=False)
    op.create_index('ix_users_password', 'users', ['password'], unique=False)
    op.create_index('ix_users_my_timezone', 'users', ['my_timezone'], unique=False)
    op.create_index('ix_users_last_name', 'users', ['last_name'], unique=False)
    op.create_index('ix_users_first_name', 'users', ['first_name'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_index('ix_users_date_updated', 'users', ['date_updated'], unique=False)
    op.create_index('ix_users_date_last_login', 'users', ['date_last_login'], unique=False)
    op.create_index('ix_users_date_created', 'users', ['date_created'], unique=False)
    op.create_table('job_application_tasks',
    sa.Column('task_description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job_application_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pkid', sa.VARCHAR(length=36), autoincrement=False, nullable=False, comment='Unique identifier for each record, a string representation of a UUID'),
    sa.Column('date_created', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was inserted, defaults to current UTC time'),
    sa.Column('date_updated', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was last updated, defaults to current UTC time on update'),
    sa.ForeignKeyConstraint(['job_application_id'], ['job_applications.pkid'], name='job_application_tasks_job_application_id_fkey'),
    sa.PrimaryKeyConstraint('pkid', name='job_application_tasks_pkey')
    )
    op.create_index('ix_job_application_tasks_task_description', 'job_application_tasks', ['task_description'], unique=False)
    op.create_index('ix_job_application_tasks_status', 'job_application_tasks', ['status'], unique=False)
    op.create_index('ix_job_application_tasks_pkid', 'job_application_tasks', ['pkid'], unique=False)
    op.create_index('ix_job_application_tasks_due_date', 'job_application_tasks', ['due_date'], unique=False)
    op.create_index('ix_job_application_tasks_date_updated', 'job_application_tasks', ['date_updated'], unique=False)
    op.create_index('ix_job_application_tasks_date_created', 'job_application_tasks', ['date_created'], unique=False)
    op.create_table('categories',
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('is_system', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pkid', sa.VARCHAR(length=36), autoincrement=False, nullable=False, comment='Unique identifier for each record, a string representation of a UUID'),
    sa.Column('date_created', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was inserted, defaults to current UTC time'),
    sa.Column('date_updated', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was last updated, defaults to current UTC time on update'),
    sa.ForeignKeyConstraint(['user_id'], ['users.pkid'], name='categories_user_id_fkey'),
    sa.PrimaryKeyConstraint('pkid', name='categories_pkey')
    )
    op.create_index('ix_categories_pkid', 'categories', ['pkid'], unique=False)
    op.create_index('ix_categories_name', 'categories', ['name'], unique=False)
    op.create_index('ix_categories_description', 'categories', ['description'], unique=False)
    op.create_index('ix_categories_date_updated', 'categories', ['date_updated'], unique=False)
    op.create_index('ix_categories_date_created', 'categories', ['date_created'], unique=False)
    op.create_table('library_names',
    sa.Column('pkid', sa.INTEGER(), server_default=sa.text("nextval('library_names_pkid_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('pkid', name='library_names_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_library_names_pkid', 'library_names', ['pkid'], unique=False)
    op.create_index('ix_library_names_name', 'library_names', ['name'], unique=True)
    op.create_table('notes',
    sa.Column('mood', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('mood_analysis', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('summary', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pkid', sa.VARCHAR(length=36), autoincrement=False, nullable=False, comment='Unique identifier for each record, a string representation of a UUID'),
    sa.Column('date_created', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was inserted, defaults to current UTC time'),
    sa.Column('date_updated', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was last updated, defaults to current UTC time on update'),
    sa.ForeignKeyConstraint(['user_id'], ['users.pkid'], name='notes_user_id_fkey'),
    sa.PrimaryKeyConstraint('pkid', name='notes_pkey')
    )
    op.create_index('ix_notes_summary', 'notes', ['summary'], unique=False)
    op.create_index('ix_notes_pkid', 'notes', ['pkid'], unique=False)
    op.create_index('ix_notes_note', 'notes', ['note'], unique=False)
    op.create_index('ix_notes_mood_analysis', 'notes', ['mood_analysis'], unique=False)
    op.create_index('ix_notes_mood', 'notes', ['mood'], unique=False)
    op.create_index('ix_notes_date_updated', 'notes', ['date_updated'], unique=False)
    op.create_index('ix_notes_date_created', 'notes', ['date_created'], unique=False)
    op.create_table('libraries',
    sa.Column('request_group_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('library_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_version', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('new_version', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('new_version_vulnerability', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('vulnerability', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('pkid', sa.VARCHAR(length=36), autoincrement=False, nullable=False, comment='Unique identifier for each record, a string representation of a UUID'),
    sa.Column('date_created', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was inserted, defaults to current UTC time'),
    sa.Column('date_updated', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was last updated, defaults to current UTC time on update'),
    sa.ForeignKeyConstraint(['library_id'], ['library_names.pkid'], name='libraries_library_id_fkey'),
    sa.PrimaryKeyConstraint('pkid', name='libraries_pkey')
    )
    op.create_index('ix_libraries_request_group_id', 'libraries', ['request_group_id'], unique=False)
    op.create_index('ix_libraries_pkid', 'libraries', ['pkid'], unique=False)
    op.create_index('ix_libraries_new_version_vulnerability', 'libraries', ['new_version_vulnerability'], unique=False)
    op.create_index('ix_libraries_new_version', 'libraries', ['new_version'], unique=False)
    op.create_index('ix_libraries_date_updated', 'libraries', ['date_updated'], unique=False)
    op.create_index('ix_libraries_date_created', 'libraries', ['date_created'], unique=False)
    op.create_index('ix_libraries_current_version', 'libraries', ['current_version'], unique=False)
    op.create_table('interesting_things',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('public', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pkid', sa.VARCHAR(length=36), autoincrement=False, nullable=False, comment='Unique identifier for each record, a string representation of a UUID'),
    sa.Column('date_created', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was inserted, defaults to current UTC time'),
    sa.Column('date_updated', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was last updated, defaults to current UTC time on update'),
    sa.ForeignKeyConstraint(['user_id'], ['users.pkid'], name='interesting_things_user_id_fkey'),
    sa.PrimaryKeyConstraint('pkid', name='interesting_things_pkey')
    )
    op.create_index('ix_interesting_things_url', 'interesting_things', ['url'], unique=False)
    op.create_index('ix_interesting_things_pkid', 'interesting_things', ['pkid'], unique=False)
    op.create_index('ix_interesting_things_name', 'interesting_things', ['name'], unique=False)
    op.create_index('ix_interesting_things_description', 'interesting_things', ['description'], unique=False)
    op.create_index('ix_interesting_things_date_updated', 'interesting_things', ['date_updated'], unique=False)
    op.create_index('ix_interesting_things_date_created', 'interesting_things', ['date_created'], unique=False)
    op.create_index('ix_interesting_things_category', 'interesting_things', ['category'], unique=False)
    op.create_table('requirements',
    sa.Column('request_group_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('text_in', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('json_data_in', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('json_data_out', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('lib_out_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lib_in_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('host_ip', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('header_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pkid', sa.VARCHAR(length=36), autoincrement=False, nullable=False, comment='Unique identifier for each record, a string representation of a UUID'),
    sa.Column('date_created', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was inserted, defaults to current UTC time'),
    sa.Column('date_updated', postgresql.TIMESTAMP(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True, comment='Date and time when a row was last updated, defaults to current UTC time on update'),
    sa.PrimaryKeyConstraint('pkid', name='requirements_pkey')
    )
    op.create_index('ix_requirements_request_group_id', 'requirements', ['request_group_id'], unique=True)
    op.create_index('ix_requirements_pkid', 'requirements', ['pkid'], unique=False)
    op.create_index('ix_requirements_host_ip', 'requirements', ['host_ip'], unique=False)
    op.create_index('ix_requirements_date_updated', 'requirements', ['date_updated'], unique=False)
    op.create_index('ix_requirements_date_created', 'requirements', ['date_created'], unique=False)
    # ### end Alembic commands ###
